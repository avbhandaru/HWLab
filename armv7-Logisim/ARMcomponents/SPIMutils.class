package edu.cornell.cs3410;

import com.cburch.logisim.data.BitWidth;
import com.cburch.logisim.data.Bounds;
import com.cburch.logisim.data.Value;
import com.cburch.logisim.instance.InstanceState;
import java.awt.Color;
import java.awt.Graphics;

public class SPIMUtils
{
  static final int NUM_REGISTERS = 32;
  static final int NUM_BITS = 5;
  static final BitWidth _WIDTH = BitWidth.create(32);
  static final BitWidth _DEPTH = BitWidth.create(5);
  static final int BOX_HEIGHT = 10;
  static final int BOX_WIDTH = 50;
  static final int COL_WIDTH = 65;
  static final int BOX_SEP = 10;
  static final int WIDTH = 240;
  static final int HEIGHT = 260;
  static final int CLK = 0;
  static final int OP = 1;
  static final int PC = 2;
  static final int ADDR = 3;
  static final int DOUT = 4;
  static final int DIN = 5;
  static final int STR = 6;
  static final int SEL = 7;
  static final int LD = 8;
  static final int IRQ_IN = 9;
  static final int PROG_CNTR = 32;
  static final int BADVADDR = 34;
  static final int STATUS = 35;
  static final int CAUSE = 36;
  static final int EPC = 37;
  static final int E_CODE_HW = 0;
  static final int E_CODE_SYS = 8;
  static final int E_CODE_OV = 12;
  static final int KEYBOARD_IRQ = 8;
  static final Value zero = Value.createKnown(_WIDTH, 0);
  static final Value xxxx = Value.createError(_WIDTH);
  static final Value zzzz = Value.createUnknown(_WIDTH);
  
  static int boxX(int paramInt)
  {
    if (paramInt < 16) {
      return 25;
    }
    return 100;
  }
  
  static Value val(InstanceState paramInstanceState, int paramInt)
  {
    return paramInstanceState.getPortValue(paramInt);
  }
  
  static int addr(InstanceState paramInstanceState, int paramInt)
  {
    return paramInstanceState.getPortValue(paramInt).toIntValue();
  }
  
  static int boxY(int paramInt)
  {
    paramInt %= 16;
    return paramInt * 10 + 10;
  }
  
  static int cp_x(int paramInt)
  {
    return 5;
  }
  
  static int cp_y(int paramInt)
  {
    return (paramInt - 16) * 10;
  }
  
  static void drawBox(Graphics paramGraphics, Bounds paramBounds, Color paramColor, int paramInt)
  {
    paramGraphics.setColor(paramColor);
    paramGraphics.drawRect(paramBounds.getX() + boxX(paramInt), paramBounds.getY() + boxY(paramInt), 50, 10);
    paramGraphics.setColor(Color.BLACK);
  }
  
  static void drawCPBox(Graphics paramGraphics, Bounds paramBounds, Color paramColor, int paramInt)
  {
    paramGraphics.setColor(paramColor);
    paramGraphics.drawRect(paramBounds.getX() + cp_x(paramInt) + 50, paramBounds.getY() + cp_y(paramInt), 50, 10);
    paramGraphics.setColor(Color.BLACK);
  }
}
