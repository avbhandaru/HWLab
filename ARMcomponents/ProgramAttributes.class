package edu.cornell.cs3410;

import com.cburch.logisim.data.AbstractAttributeSet;
import com.cburch.logisim.data.Attribute;
import com.cburch.logisim.proj.Project;
import java.util.Arrays;
import java.util.List;
import java.util.WeakHashMap;

public class ProgramAttributes
  extends AbstractAttributeSet
{
  private static List<Attribute<?>> ATTRIBUTES = Arrays.asList(new Attribute[] { Program32.CONTENTS_ATTR });
  private static WeakHashMap<ProgramAssembler.Listing, ProgramFrame32> windowRegistry = new WeakHashMap();
  private ProgramAssembler.Listing contents = new ProgramAssembler.Listing();
  
  static ProgramFrame32 getProgramFrame(ProgramAssembler.Listing paramListing, Project paramProject)
  {
    synchronized (windowRegistry)
    {
      ProgramFrame32 localProgramFrame32 = (ProgramFrame32)windowRegistry.get(paramListing);
      if (localProgramFrame32 == null)
      {
        localProgramFrame32 = new ProgramFrame32(paramListing, paramProject);
        localProgramFrame32.setLocationRelativeTo(null);
        localProgramFrame32.setLocation(300, 200);
        windowRegistry.put(paramListing, localProgramFrame32);
      }
      return localProgramFrame32;
    }
  }
  
  protected void copyInto(AbstractAttributeSet paramAbstractAttributeSet)
  {
    ProgramAttributes localProgramAttributes = (ProgramAttributes)paramAbstractAttributeSet;
    localProgramAttributes.contents = this.contents.clone();
  }
  
  public List<Attribute<?>> getAttributes()
  {
    return ATTRIBUTES;
  }
  
  public <V> V getValue(Attribute<V> paramAttribute)
  {
    if (paramAttribute == Program32.CONTENTS_ATTR) {
      return this.contents;
    }
    return null;
  }
  
  public <V> void setValue(Attribute<V> paramAttribute, V paramV)
  {
    ProgramAssembler.Listing localListing = this.contents;
    if (paramAttribute == Program32.CONTENTS_ATTR) {
      this.contents = ((ProgramAssembler.Listing)paramV);
    }
    fireAttributeValueChanged(paramAttribute, paramV, localListing);
  }
}
