package edu.cornell.cs3410;

import com.cburch.hex.HexModel;
import com.cburch.hex.HexModelListener;
import com.cburch.logisim.util.EventSourceWeakSupport;
import java.util.Arrays;
import java.util.Iterator;

class MemContents
  implements Cloneable, HexModel
{
  private static final int PAGE_SIZE_BITS = 12;
  private static final int PAGE_SIZE = 4096;
  private static final int PAGE_MASK = 4095;
  private EventSourceWeakSupport<HexModelListener> listeners = null;
  private int width;
  private int addrBits;
  private int mask;
  private MemContentsSub.ContentsInterface[] pages;
  
  static MemContents create(int paramInt1, int paramInt2)
  {
    return new MemContents(paramInt1, paramInt2);
  }
  
  private MemContents(int paramInt1, int paramInt2)
  {
    setDimensions(paramInt1, paramInt2);
  }
  
  public void addHexModelListener(HexModelListener paramHexModelListener)
  {
    if (this.listeners == null) {
      this.listeners = new EventSourceWeakSupport();
    }
    this.listeners.add(paramHexModelListener);
  }
  
  public void removeHexModelListener(HexModelListener paramHexModelListener)
  {
    if (this.listeners == null) {
      return;
    }
    this.listeners.add(paramHexModelListener);
    if (this.listeners.isEmpty()) {
      this.listeners = null;
    }
  }
  
  private void fireMetainfoChanged()
  {
    if (this.listeners == null) {
      return;
    }
    int i = 0;
    Iterator localIterator = this.listeners.iterator();
    while (localIterator.hasNext())
    {
      HexModelListener localHexModelListener = (HexModelListener)localIterator.next();
      i = 1;
      localHexModelListener.metainfoChanged(this);
    }
    if (i == 0) {
      this.listeners = null;
    }
  }
  
  private void fireBytesChanged(long paramLong1, long paramLong2, int[] paramArrayOfInt)
  {
    if (this.listeners == null) {
      return;
    }
    int i = 0;
    Iterator localIterator = this.listeners.iterator();
    while (localIterator.hasNext())
    {
      HexModelListener localHexModelListener = (HexModelListener)localIterator.next();
      i = 1;
      localHexModelListener.bytesChanged(this, paramLong1, paramLong2, paramArrayOfInt);
    }
    if (i == 0) {
      this.listeners = null;
    }
  }
  
  public MemContents clone()
  {
    try
    {
      MemContents localMemContents = (MemContents)super.clone();
      localMemContents.listeners = null;
      localMemContents.pages = new MemContentsSub.ContentsInterface[this.pages.length];
      for (int i = 0; i < localMemContents.pages.length; i++) {
        if (this.pages[i] != null) {
          localMemContents.pages[i] = this.pages[i].clone();
        }
      }
      return localMemContents;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException) {}
    return this;
  }
  
  public int getLogLength()
  {
    return this.addrBits;
  }
  
  public int getWidth()
  {
    return this.width;
  }
  
  public int get(long paramLong)
  {
    int i = (int)(paramLong >>> 12);
    int j = (int)(paramLong & 0xFFF);
    if ((i < 0) || (i >= this.pages.length) || (this.pages[i] == null)) {
      return 0;
    }
    return this.pages[i].get(j) & this.mask;
  }
  
  public boolean isClear()
  {
    for (int i = 0; i < this.pages.length; i++)
    {
      MemContentsSub.ContentsInterface localContentsInterface = this.pages[i];
      if (localContentsInterface != null) {
        for (int j = localContentsInterface.getLength() - 1; j >= 0; j--) {
          if (localContentsInterface.get(j) != 0) {
            return false;
          }
        }
      }
    }
    return true;
  }
  
  public void set(long paramLong, int paramInt)
  {
    int i = (int)(paramLong >>> 12);
    int j = (int)(paramLong & 0xFFF);
    int k = this.pages[i] == null ? 0 : this.pages[i].get(j) & this.mask;
    int m = paramInt & this.mask;
    if (k != m)
    {
      if (this.pages[i] == null) {
        this.pages[i] = MemContentsSub.createContents(4096, this.width);
      }
      this.pages[i].set(j, m);
      fireBytesChanged(paramLong, 1L, new int[] { k });
    }
  }
  
  public void set(long paramLong, int[] paramArrayOfInt)
  {
    if (paramArrayOfInt.length == 0) {
      return;
    }
    int i = (int)(paramLong >>> 12);
    int j = (int)(paramLong & 0xFFF);
    int k = (int)(paramLong + paramArrayOfInt.length - 1L >>> 12);
    int m = (int)(paramLong + paramArrayOfInt.length - 1L & 0xFFF);
    int[] arrayOfInt1;
    if (i == k)
    {
      ensurePage(i);
      MemContentsSub.ContentsInterface localContentsInterface1 = this.pages[i];
      if (!localContentsInterface1.matches(paramArrayOfInt, j, this.mask))
      {
        arrayOfInt1 = localContentsInterface1.get(j, paramArrayOfInt.length);
        localContentsInterface1.load(j, paramArrayOfInt, this.mask);
        if (localContentsInterface1.isClear()) {
          this.pages[i] = null;
        }
        fireBytesChanged(paramLong, paramArrayOfInt.length, arrayOfInt1);
      }
    }
    else
    {
      MemContentsSub.ContentsInterface localContentsInterface2;
      if (j == 0)
      {
        i--;
        localContentsInterface2 = 0;
      }
      else
      {
        ensurePage(i);
        arrayOfInt1 = new int[4096 - j];
        System.arraycopy(paramArrayOfInt, 0, arrayOfInt1, 0, arrayOfInt1.length);
        localContentsInterface3 = this.pages[i];
        if (!localContentsInterface3.matches(arrayOfInt1, j, this.mask))
        {
          int[] arrayOfInt2 = localContentsInterface3.get(j, arrayOfInt1.length);
          localContentsInterface3.load(j, arrayOfInt1, this.mask);
          if (localContentsInterface3.isClear()) {
            this.pages[i] = null;
          }
          fireBytesChanged(paramLong, 4096 - i, arrayOfInt2);
        }
        localContentsInterface2 = arrayOfInt1.length;
      }
      arrayOfInt1 = new int['���'];
      MemContentsSub.ContentsInterface localContentsInterface3 = localContentsInterface2;
      int n = i + 1;
      Object localObject;
      while (n < k)
      {
        localObject = this.pages[n];
        if (localObject == null)
        {
          int i1 = 1;
          for (MemContentsSub.ContentsInterface localContentsInterface5 = 0; localContentsInterface5 < 4096; localContentsInterface5++) {
            if ((paramArrayOfInt[(localContentsInterface3 + localContentsInterface5)] & this.mask) != 0)
            {
              i1 = 0;
              break;
            }
          }
          if (i1 == 0)
          {
            localObject = MemContentsSub.createContents(4096, this.width);
            this.pages[n] = localObject;
          }
        }
        if (localObject != null)
        {
          System.arraycopy(paramArrayOfInt, localContentsInterface3, arrayOfInt1, 0, 4096);
          if (!((MemContentsSub.ContentsInterface)localObject).matches(arrayOfInt1, j, this.mask))
          {
            int[] arrayOfInt3 = ((MemContentsSub.ContentsInterface)localObject).get(0, 4096);
            ((MemContentsSub.ContentsInterface)localObject).load(0, arrayOfInt1, this.mask);
            if (((MemContentsSub.ContentsInterface)localObject).isClear()) {
              this.pages[n] = null;
            }
            fireBytesChanged(n << 12, 4096L, arrayOfInt3);
          }
        }
        n++;
        localContentsInterface3 += 4096;
      }
      if (m >= 0)
      {
        ensurePage(k);
        arrayOfInt1 = new int[m + 1];
        System.arraycopy(paramArrayOfInt, localContentsInterface3, arrayOfInt1, 0, m + 1);
        MemContentsSub.ContentsInterface localContentsInterface4 = this.pages[k];
        if (!localContentsInterface4.matches(arrayOfInt1, j, this.mask))
        {
          localObject = localContentsInterface4.get(0, m + 1);
          localContentsInterface4.load(0, arrayOfInt1, this.mask);
          if (localContentsInterface4.isClear()) {
            this.pages[k] = null;
          }
          fireBytesChanged(k << 12, m + 1, (int[])localObject);
        }
      }
    }
  }
  
  public void fill(long paramLong1, long paramLong2, int paramInt)
  {
    if (paramLong2 == 0L) {
      return;
    }
    int i = (int)(paramLong1 >>> 12);
    int j = (int)(paramLong1 & 0xFFF);
    int k = (int)(paramLong1 + paramLong2 - 1L >>> 12);
    int m = (int)(paramLong1 + paramLong2 - 1L & 0xFFF);
    paramInt &= this.mask;
    int[] arrayOfInt1;
    MemContentsSub.ContentsInterface localContentsInterface;
    Object localObject2;
    if (i == k)
    {
      ensurePage(i);
      arrayOfInt1 = new int[(int)paramLong2];
      Arrays.fill(arrayOfInt1, paramInt);
      localContentsInterface = this.pages[i];
      if (!localContentsInterface.matches(arrayOfInt1, j, this.mask))
      {
        localObject2 = localContentsInterface.get(j, (int)paramLong2);
        localContentsInterface.load(j, arrayOfInt1, this.mask);
        if ((paramInt == 0) && (localContentsInterface.isClear())) {
          this.pages[i] = null;
        }
        fireBytesChanged(paramLong1, paramLong2, (int[])localObject2);
      }
    }
    else
    {
      if (j == 0)
      {
        i--;
      }
      else if ((paramInt != 0) || (this.pages[i] != null))
      {
        ensurePage(i);
        arrayOfInt1 = new int[4096 - j];
        Arrays.fill(arrayOfInt1, paramInt);
        localContentsInterface = this.pages[i];
        if (!localContentsInterface.matches(arrayOfInt1, j, this.mask))
        {
          localObject2 = localContentsInterface.get(j, arrayOfInt1.length);
          localContentsInterface.load(j, arrayOfInt1, this.mask);
          if ((paramInt == 0) && (localContentsInterface.isClear())) {
            this.pages[i] = null;
          }
          fireBytesChanged(paramLong1, 4096 - i, (int[])localObject2);
        }
      }
      Object localObject1;
      if (paramInt == 0)
      {
        for (int n = i + 1; n < k; n++) {
          if (this.pages[n] != null) {
            clearPage(n);
          }
        }
      }
      else
      {
        localObject1 = new int['���'];
        Arrays.fill((int[])localObject1, paramInt);
        for (int i1 = i + 1; i1 < k; i1++)
        {
          ensurePage(i1);
          localObject2 = this.pages[i1];
          if (!((MemContentsSub.ContentsInterface)localObject2).matches((int[])localObject1, 0, this.mask))
          {
            int[] arrayOfInt3 = ((MemContentsSub.ContentsInterface)localObject2).get(0, 4096);
            ((MemContentsSub.ContentsInterface)localObject2).load(0, (int[])localObject1, this.mask);
            fireBytesChanged(i1 << 12, 4096L, arrayOfInt3);
          }
        }
      }
      if (m >= 0)
      {
        localObject1 = this.pages[k];
        if ((paramInt != 0) || (localObject1 != null))
        {
          ensurePage(k);
          int[] arrayOfInt2 = new int[m + 1];
          Arrays.fill(arrayOfInt2, paramInt);
          if (!((MemContentsSub.ContentsInterface)localObject1).matches(arrayOfInt2, 0, this.mask))
          {
            localObject2 = ((MemContentsSub.ContentsInterface)localObject1).get(0, m + 1);
            ((MemContentsSub.ContentsInterface)localObject1).load(0, arrayOfInt2, this.mask);
            if ((paramInt == 0) && (((MemContentsSub.ContentsInterface)localObject1).isClear())) {
              this.pages[k] = null;
            }
            fireBytesChanged(k << 12, m + 1, (int[])localObject2);
          }
        }
      }
    }
  }
  
  public void clear()
  {
    for (int i = 0; i < this.pages.length; i++) {
      if ((this.pages[i] != null) && (this.pages[i] != null)) {
        clearPage(i);
      }
    }
  }
  
  private void clearPage(int paramInt)
  {
    MemContentsSub.ContentsInterface localContentsInterface = this.pages[paramInt];
    int[] arrayOfInt = new int[localContentsInterface.getLength()];
    int i = 0;
    for (int j = 0; j < arrayOfInt.length; j++)
    {
      int k = localContentsInterface.get(j) & this.mask;
      arrayOfInt[j] = k;
      if (k != 0) {
        i = 1;
      }
    }
    if (i != 0)
    {
      this.pages[paramInt] = null;
      fireBytesChanged(paramInt << 12, arrayOfInt.length, arrayOfInt);
    }
  }
  
  public void setDimensions(int paramInt1, int paramInt2)
  {
    if ((paramInt1 == this.addrBits) && (paramInt2 == this.width)) {
      return;
    }
    this.addrBits = paramInt1;
    this.width = paramInt2;
    this.mask = (paramInt2 == 32 ? -1 : (1 << paramInt2) - 1);
    MemContentsSub.ContentsInterface[] arrayOfContentsInterface = this.pages;
    int i;
    int j;
    if (paramInt1 < 12)
    {
      i = 1;
      j = 1 << paramInt1;
    }
    else
    {
      i = 1 << paramInt1 - 12;
      j = 4096;
    }
    this.pages = new MemContentsSub.ContentsInterface[i];
    if (arrayOfContentsInterface != null)
    {
      int k = Math.min(arrayOfContentsInterface.length, this.pages.length);
      for (int m = 0; m < k; m++) {
        if (arrayOfContentsInterface[m] != null)
        {
          this.pages[m] = MemContentsSub.createContents(j, paramInt2);
          int n = Math.max(arrayOfContentsInterface[m].getLength(), j);
          for (int i1 = 0; i1 < n; i1++) {
            this.pages[m].set(i1, arrayOfContentsInterface[m].get(i1));
          }
        }
      }
    }
    if ((i == 0) && (this.pages[0] == null)) {
      this.pages[0] = MemContentsSub.createContents(j, paramInt2);
    }
    fireMetainfoChanged();
  }
  
  public long getFirstOffset()
  {
    return 0L;
  }
  
  public long getLastOffset()
  {
    return (1L << this.addrBits) - 1L;
  }
  
  public int getValueWidth()
  {
    return this.width;
  }
  
  private void ensurePage(int paramInt)
  {
    if (this.pages[paramInt] == null) {
      this.pages[paramInt] = MemContentsSub.createContents(4096, this.width);
    }
  }
}
